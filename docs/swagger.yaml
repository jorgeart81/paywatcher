definitions:
  request.ChangePasswordReq:
    properties:
      currentPassword:
        type: string
      newPassword:
        type: string
    required:
    - currentPassword
    - newPassword
    type: object
  request.LoginUserReq:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  request.RegisterUserReq:
    properties:
      email:
        type: string
      password:
        type: string
      role:
        items:
          type: string
        type: array
      username:
        type: string
    required:
    - email
    - password
    - username
    type: object
  request.SoftDeleteUserReq:
    properties:
      password:
        type: string
    required:
    - password
    type: object
  response.AuthResponse:
    properties:
      email:
        type: string
      id:
        type: string
      role:
        items:
          type: string
        type: array
      tokens: {}
      username:
        type: string
    type: object
  response.ErrorResponse:
    properties:
      error:
        $ref: '#/definitions/response.GenericError'
    type: object
  response.GenericError:
    properties:
      code:
        type: string
      message:
        type: string
    type: object
  response.RefreshTokenResponse:
    properties:
      tokens: {}
    type: object
  response.UpdateUserResponse:
    properties:
      email:
        type: string
      id:
        type: string
      role:
        items:
          type: string
        type: array
      username:
        type: string
    type: object
info:
  contact: {}
paths:
  /auth/change-password:
    patch:
      consumes:
      - application/json
      description: Change a new password
      parameters:
      - description: Request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.ChangePasswordReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.UpdateUserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Change Password
      tags:
      - Auth
  /auth/delete:
    patch:
      consumes:
      - application/json
      description: Soft delete of user account
      parameters:
      - description: Request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.SoftDeleteUserReq'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Soft Delete
      tags:
      - Auth
  /auth/login:
    post:
      consumes:
      - application/json
      description: User login with email and password
      parameters:
      - description: Request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.LoginUserReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.AuthResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Login
      tags:
      - Auth
  /auth/logout:
    get:
      description: Log out of user account
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.GenericError'
      summary: Logout
      tags:
      - Auth
  /auth/refresh-token:
    post:
      description: Create a new refresh token
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.RefreshTokenResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Refresh Token
      tags:
      - Auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: Register a new user
      parameters:
      - description: Request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.RegisterUserReq'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/response.AuthResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Register user
      tags:
      - Auth
swagger: "2.0"
